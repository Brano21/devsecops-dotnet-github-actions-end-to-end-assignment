name: Build unit test, run SAST, run SCA, run DAST
on: push

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build unit test, run SonarCloud scan
    steps:
      - name: Checkout code
        needs: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'

      - name: Run SonarCloud analysis
        shell: powershell
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet sonarscanner begin /k:"dotnet-playground" /o:"dotnet-playground" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          dotnet build SomeConsoleApplication.sln
          dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

  security:
    runs-on: ubuntu-latest
    needs: build
    name: Run Snyk scan
    steps:
      - name: Checkout code
        needs: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  zap_scan:
    runs-on: ubuntu-latest
    needs: security
    name: Scan the webapplication
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
  
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://example.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      
