name: Build unit test, run SAST, run SCA, run DAST
on: push

jobs:
  build:
    runs-on: windows-latest
    name: Build unit test, run SonarCloud scan
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download and Install .NET Framework 4.5.2 Developer Pack
        run: |
          Invoke-WebRequest https://download.microsoft.com/download/B/4/0/B40A1F1F-9D4D-4D6F-8BC7-FE181E1012C9/NDP452-DevPack-KB2901954-ENU.exe -OutFile installer.exe
          Start-Process installer.exe -ArgumentList '/quiet', '/norestart' -Wait
        shell: powershell

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v1.3

      - name: Setup NuGet
        uses: NuGet/setup-nuget@v1

      - name: Install SonarScanner for MSBuild
        run: dotnet tool install --global dotnet-sonarscanner

      - name: Begin SonarCloud Analysis
        run: dotnet sonarscanner begin /k:"your-project-key" /o:"your-org" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
        env:
          PATH: $PATH:$HOME/.dotnet/tools

      - name: Build with MSBuild
        run: msbuild SomeConsoleApplication.sln

      - name: End SonarCloud Analysis
        run: dotnet sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
        env:
          PATH: $PATH:$HOME/.dotnet/tools

  security:
    runs-on: ubuntu-latest
    #needs: build
    name: Run Snyk scan
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/dotnet@master
        continue-on-error: true
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: snyk.sarif

  zap_scan:
    runs-on: ubuntu-latest
    #needs: security
    name: Scan the webapplication
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: master
  
      - name: ZAP Scan
        uses: zaproxy/action-baseline@v0.14.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://example.com'
          rules_file_name: '.zap/rules.tsv'
          cmd_options: '-a'

      
